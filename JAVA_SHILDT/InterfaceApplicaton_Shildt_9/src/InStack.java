interface InStack {
    // Интерфейса InStack с закрытым
    // методом, применяемым в двух реализуемых по
    // умолчанию методах.

    void push(int item); // сохранить элемент в стеке

    int pop(); // извлечь элемент из стека

    default int clear() { // метод с реализацией по умолчанию
                          // не связан с закрытым методом
        System.out.println("Метод clear() не реализован.");
        return 0;
    }

    // Метод с реализацией по умолчанию, возвращающий
    // массив из n элементов, начиная с вершины стека
    default int[] popNElements(int n) {
        // возвратить запрашиваемые элементы из стека
        return getElements(n);
    }

    // Метод с реализацией по умолчанию, возвращающий
    // из стека массив из n элементов, следующих после
    // указанного количества пропускаемых элементов
    default int[] skipAndPopNElements(int skip, int n) {
        // пропустить указанное количество элементов в стеке
        getElements(skip);
        // возвратить запрашиваемые элементы из стека
        return getElements(n);
    }

    // Закрытый метод, возвращающий массив из n элементов,
    // начиная с вершины стека
    private int[] getElements(int n) {
        int[] elements = new int[n];
        for(int i = 0; i < n; i++) elements[i] = pop();
        return elements;
    }
}
